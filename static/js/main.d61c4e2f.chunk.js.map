{"version":3,"sources":["functions/fetch.js","functions/getTasks.js","functions/getLists.js","layouts/Footer.js","functions/transformData.js","functions/createTask.js","functions/findListAndTask.js","functions/copyData.js","functions/createList.js","functions/updateDB.js","functions/updateTask.js","layouts/Nav.js","layouts/Welcome.js","components/Login.js","pages/LoginPage.js","components/Reg.js","components/NextReg.js","pages/RegisterPage.js","pages/WelcomePage.js","components/ListNavItem;.js","layouts/NavMain.js","components/ListData.js","components/TaskFull.js","components/Task.js","components/Stage.js","components/ListHooks.js","components/EmptyList.js","functions/handleDroppedFiles.js","functions/previevFile.js","components/PrevImg.js","functions/checkAvatar.js","components/addAvatar.js","components/User.js","components/LogOut.js","pages/Main.js","components/Loading.js","functions/typeof_id.js","components/App.js","index.js"],"names":["customFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","fet","res","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","json","abrupt","console","log","status","Error","t0","message","stop","apply","this","getTasks","token","tasks","method","headers","Accept","Content-Type","Authorization","concat","_x","getLists","lists","Footer","props","react_default","createElement","href","className","transformData","data","forEach","list","listTasks","filter","task","_id","createTask","listId","userId","createdAt","Date","toISOString","completed","owner","description","name","stage","updatedAt","temp_Id","getTime","findListAndTask","id","listIndex","findIndex","taskIndex","copyData","input","firstStage","JSON","stringify","parse","createList","tittle","temp_id","updateDB","body","localStorage","getItem","sessionStorage","then","catch","e","updateTask","finalUrl","authOption","accessToken","_x2","_x3","Nav","isMain","react_router_dom","to","where","Welcome","Login","loginStatus","onSubmit","onSub","htmlFor","onChange","handler","value","regValues","email","placeholder","type","pass","LoginPage","Fragment","layouts_Nav","components_Login","Register","NextReg","RegisterPage","isRegistrationDone","components_NextReg","Reg","HomePage","state","_this2","_this$props","react_router","exact","path","component","render","pages_LoginPage","assign","pages_RegisterPage","Component","ListNavItem","onClick","data-listid","deleteList","NavMain","userName","addListHandler","avatar","ReactLists","map","ListNavItem_","key","src","alt","ListData","activeList","activeListInputs","isListEddited","TaskFull","_props$task$task","activeTaskInputs","data-type","data-stage","data-name","Task","stageHandler","fullTaskHandler","listName","data-listtittle","Stage","activeTask","stageName","handlers","stageTasks","components_Task","data-listname","addTaskHandler","components_TaskFull","ListHooks","components_ListData","listInputsHandler","outFocusHandler","listInputsOutFocus","components_Stage","stageTaskHandler","EmptyList","user","uploudFile","file","formData","FormData","append","handleDroppedFiles","_ref2","_callee2","files","_context2","toConsumableArray","previevFiles","reader","FileReader","readAsDataURL","prevImg","checkAvatar","split","includes","AddAvatar","setAvatar","closeAvatar","_useState","useState","_useState2","slicedToArray","droppedFile","setDroppedFile","_useState3","_useState4","isclicked","setIsclicked","_useState5","_useState6","isFile","setIsFile","_useState7","_useState8","prevurl","setPrevUrl","_useState9","_useState10","isUploaded","setIsUploaded","_useState11","_useState12","isOnDraggedArea","setIsOnDraggedArea","dragHandler","preventDefault","stopPropagation","dataTransfer","alert","onloadend","result","onDragEnter","onDragLeave","onDragOver","onDrop","action","target","accept","PrevImg","setTimeout","User","_props$user","isUserEddited","userInputs","isAddAvatar","setIsAddAvatar","isAvatarFocus","setIsAvatarFocus","useEffect","userResetInputs","mouseHandler","data-userid","addAvatar","setNewAvatarToLocaState","onMouseLeave","onMouseEnter","style","visibility","userInputsHandler","userSaveHandler","LogOut","logOutHandler","Main","isLoaded","_this","isReady","activeListName","activeListId","basename","process","layouts_NavMain","setActiveList","components_ListHooks","components_EmptyList","components_User","components_LogOut","Loading","validateId","idArr","valid","check","maxI","n","inc","App","regValue","rememberMe","isLogin","isload","_this$state$regValue","_body","_options","loginRes","password","setState","setItem","manageData","window","history","pushState","t1","objectSpread","userObj","userAvatar","_args2","currentTarget","parentNode","dataset","listid","modTask","newTask","push","list_id","t","newData","newList","persist","taskId","work","newValues","confirm","splice","ListId","newActiveList","newTittle","newDesc","inputs","newName","clear","user2","_this$state","pages_Main","WelcomePage","layouts_Footer","components_Loading","addEventListener","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d61c4e2f.chunk.js","sourcesContent":["const customFetch = async (url = \"\", options = {}) => {\r\n    try {\r\n        const fet = await fetch(url, options)\r\n        if (fet.ok) {\r\n            const res = await fet.json()\r\n            return res\r\n        } else {\r\n            console.log(fet.status);\r\n            throw new Error(fet.status)\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e, 'bład z custom fetch');\r\n        throw new Error(e.message)\r\n    }\r\n\r\n}\r\nexport { customFetch }\r\n\r\n","import {\r\n    customFetch\r\n} from './fetch'\r\nconst getTasks = async (token) => {\r\n    const url = 'https://sebastian-webdev-task-app.herokuapp.com/tasks/'\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n\r\n    }\r\n    try {\r\n        const tasks = await customFetch(url, options)\r\n        return tasks\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    getTasks\r\n}","import {\r\n    customFetch\r\n} from './fetch'\r\nconst getLists = async (token) => {\r\n    const url = \"https://sebastian-webdev-task-app.herokuapp.com/lists\"\r\n    const options = {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n\r\n    }\r\n    try {\r\n        const lists = await customFetch(url, options)\r\n        return lists\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    getLists\r\n}","import './css/Footer.css'\r\nimport React from 'react'\r\nconst Footer = (props) => {\r\n    return (\r\n        <footer>\r\n            <p>&copy; 2019 Sebastian Gołębiowski</p>\r\n            <p><a href=\"https://github.com/SebastianWebdev\"><i className=\"fab fa-github\"></i></a></p>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","const transformData = (tasks, lists) => {\r\n    const data = {}\r\n    lists.forEach(list => {\r\n        const listTasks = tasks.filter(task => list._id === task.list)\r\n        list.tasks = listTasks\r\n    })\r\n    data.lists = lists\r\n    return data\r\n\r\n}\r\nexport {\r\n    transformData\r\n}","const createTask = (listId, userId) => {\r\n    const createdAt = new Date().toISOString()\r\n    const tempId = new Date().getTime()\r\n    const body = {\r\n        completed: false,\r\n        owner: userId,\r\n        description: \"Empty Task\",\r\n        name: \"Task Name\",\r\n        stage: 1,\r\n        list: listId,\r\n        createdAt,\r\n        updatedAt: createdAt,\r\n        _id: '',\r\n        temp_Id: tempId\r\n    }\r\n    return body\r\n}\r\nexport default createTask","const findListAndTask = (listId, id, data) => {\r\n    const listIndex = data.lists.findIndex(list => list._id === listId)\r\n    const taskIndex = data.lists[listIndex].tasks.findIndex(task => task._id === id)\r\n    const task = data.lists[listIndex].tasks[taskIndex]\r\n    return { listIndex, taskIndex, task }\r\n}\r\nexport default findListAndTask","const copyData = input => {\r\n    const firstStage = JSON.stringify(input);\r\n    const secondStage = JSON.parse(firstStage)\r\n    return secondStage\r\n}\r\nexport default copyData\r\n// This function makes deep copy of serialized data, like objects and arrays. Do not use, if your object contains function.","const createList = owner => {\r\n    const createdAt = new Date().toISOString()\r\n    const tempId = new Date().getTime()\r\n    const newList = {\r\n        tittle: 'Nowa Lista',\r\n        description: \"Tutaj umieść opis\",\r\n        _id: '',\r\n        temp_id: tempId,\r\n        createdAt,\r\n        tasks: [],\r\n        owner,\r\n        completed: false\r\n    }\r\n    return newList\r\n}\r\nexport default createList","import { customFetch } from './fetch'\r\n\r\nconst updateDB = (url, body) => {\r\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken')\r\n    const options = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    customFetch(url, options).then(res => {\r\n\r\n    }).catch(e => {\r\n        console.log(e);\r\n    })\r\n}\r\nexport default updateDB","import {\r\n    customFetch\r\n} from '../functions/fetch'\r\nconst updateTask = async (url, id, body) => {\r\n    const finalUrl = url + id\r\n    const options = {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json, text/plain, */*',\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': \"\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n    const token = sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken\r\n    const authOption = 'Bearer ' + token\r\n    if (!options.headers.Authorization) {\r\n        options.headers.Authorization = authOption\r\n    }\r\n    try {\r\n        const fetch = await customFetch(finalUrl, options)\r\n\r\n        return fetch\r\n\r\n    } catch (e) {\r\n\r\n        console.log(e);\r\n        return e\r\n\r\n    }\r\n\r\n}\r\nexport {\r\n    updateTask\r\n}","import './css/Nav.css'\r\nimport React from '../../node_modules/react'\r\nimport {\r\n    NavLink\r\n} from '../../node_modules/react-router-dom'\r\nconst Nav = (props) => {\r\n\r\n    return (\r\n        <nav className=\" nav nav1\" >\r\n            < div className=\"logo-wrap\" >< h1 className=\"logo\" >Logo</h1>\r\n            </div >\r\n            {!props.isMain ? <div className=\"buttons\" > {props.where === \"login\" ? < div className=\"btn\" > < NavLink to=\"register\" > Register </NavLink></div > : <div className=\"btn\" > < NavLink to=\"login\" > Login </NavLink></div >} </div> : <div className=\"buttons\"> <div className=\"btn\" > < NavLink to=\"register\" > Register </NavLink></div ><div className=\"btn\" > < NavLink to=\"login\" > Login </NavLink></div ></div>\r\n            }\r\n        </nav>\r\n    )\r\n}\r\nexport default Nav","\r\nimport React from '../../node_modules/react'\r\nconst Welcome = (props) => {\r\n\r\n    return (\r\n        <main className=\"welcome-page\">\r\n            <section className=\"intro\">\r\n                <h2 className=\"section-tittle\">Poznaj Task Manager</h2>\r\n                <p className=\"section-describe\"> Task Manager to aplikacją służąca do tworzenia list zadań.\r\n                    Jest to projekt zrealizowany za pomocą Node.js, MongoDB oraz React w ramach nauki tych technologii. Nie jest to komercyjna aplikacja, lecz na potrzeby prezentacji, możesz utworzyć konto użytkownika i tworzyć swoje własne listy zadań.\r\n        </p>\r\n            </section>\r\n            <section className=\"technology\">\r\n                <h2 className=\"section-tittle\">Użyte technologie</h2>\r\n                <div className=\"tech-wrap\">\r\n                    <div className=\"tech-card\"> <h2 className=\"card-tittle\">MongoDB</h2>\r\n                        <p className=\"card-desc\">\r\n                            Aplikacja używa nierelacyjnej bazy danych MongoDB, gdzie przechowywane są zadania, listy zadań oraz użytkownicy.\r\n                    Pracując z bazą danych wykorzystywałem <a href=\"https://mongoosejs.com/\">Mongoose</a>. Baza danych została postawiona na <a href=\"https://www.mongodb.com/cloud/atlas\">MongoDB Atlas</a>\r\n                        </p>\r\n                        <div className=\"card-icon-wrap\"><i className=\"fas fa-database\"></i></div>\r\n\r\n                    </div>\r\n                    <div className=\"tech-card\"><h2 className=\"card-tittle\">React</h2>\r\n                        <p className=\"card-desc\">\r\n                            Cały front Aplikacji powstał przy użyciu biblioteki React.js.\r\n                            Front został stworzony jako Single Page Application, oraz zgodnie z wytycznymi responsive web design.\r\n                </p>\r\n                        <div className=\"card-icon-wrap\"><i className=\"fab fa-react\"></i></div></div>\r\n                    <div className=\"tech-card\"><h2 className=\"card-tittle\">Node.js</h2>\r\n                        <p className=\"card-desc\">\r\n                            Strona backendowa stworzona została przy użyciu Node.js oraz frameworku <a href=\"http://expressjs.com/\">express</a>, pozwoliło mi to na utworzenie REST API. Serwer został umieszczony na platformie <a href=\"https://www.heroku.com/\">Heroku</a> Link do kodu na <a href=\"https://github.com/SebastianWebdev/node.js-Task-app\">Github</a>\r\n                        </p>\r\n                        <div className=\"card-icon-wrap\"><i className=\"fab fa-node-js\"></i></div></div></div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\nexport default Welcome","import React from '../../node_modules/react'\r\n\r\nconst Login = (props) => {\r\n    const data = props.props\r\n    const loginStatus = data.loginStatus\r\n    \r\n    return (\r\n        <div className=\"reg-log-wrapper\">\r\n            <h1>Zaloguj się do konta</h1>\r\n            {loginStatus === '400' ? <h2 className=\"login-alert\">Zły login lub hasło</h2> : null}\r\n            <form className=\"log-form\" id=\"login\" onSubmit={data.onSub}  >\r\n\r\n                <label htmlFor=\"reg-mail\">Email</label>\r\n                <input onChange={data.handler} name=\"email\" value={data.regValues.email} id=\"reg-mail\" placeholder=\"Podaj email\" type=\"email\" />\r\n                <label htmlFor=\"reg-pass\">Hasło</label>\r\n                <input onChange={data.handler} name=\"pass\" value={data.regValues.pass} id=\"reg-pass\" placeholder=\"hasło\" type=\"password\" />\r\n                <label htmlFor=\"rememberMe\">Zapamiętaj mnie</label>\r\n                <input onChange={data.handler} type=\"checkbox\" id=\"rememberMe\" name=\"rememberMe\" />\r\n                <button type=\"submit\" className=\"reg-sub\">Zaloguj się</button>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\nexport default Login","import React from '../../node_modules/react';\r\nimport Login from '../components/Login'\r\nimport Nav from '../layouts/Nav'\r\nconst LoginPage = (props) => {\r\n    const location = \"login\"\r\n    return (\r\n        <>\r\n            <Nav where={location}></Nav>\r\n            <Login props={props} />\r\n        </>\r\n        // !props.isRegistrationDone ? <Login props={props} /> : <NextReg />\r\n    )\r\n}\r\nexport default LoginPage","import React from 'react'\r\nconst Register = (props) => {\r\n    const data = props.props\r\n\r\n    return (\r\n        <div className=\"reg-log-wrapper\">\r\n            <h1>Stwórz Konto</h1>\r\n            <form className=\"log-form\" id=\"reg\" onSubmit={data.onSub}  >\r\n                <label htmlFor=\"reg-name\">Nazwa</label>\r\n                <input onChange={data.handler} name=\"name\" value={data.regValues.name} id=\"reg-name\" placeholder=\"Podaj swoje imię i nazwisko\" type=\"text\" />\r\n                <label htmlFor=\"reg-mail\">Email</label>\r\n                <input onChange={data.handler} name=\"email\" value={data.regValues.email} id=\"reg-mail\" placeholder=\"Podaj email\" type=\"email\" />\r\n                <label htmlFor=\"reg-pass\">Hasło</label>\r\n                <input onChange={data.handler} name=\"pass\" value={data.regValues.pass} id=\"reg-pass\" placeholder=\"hasło\" type=\"password\" />\r\n                <button type=\"submit\" className=\"reg-sub\">Stwórz nowe konto</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React from '../../node_modules/react'\r\nimport { Link } from '../../node_modules/react-router-dom'\r\nconst NextReg = (props) => {\r\n    return (\r\n        <div className=\"reg-log-wrapper\">\r\n            <h1>Konto zostało zarejestrowane</h1>\r\n            <Link to=\"/login\" className=\"postreg-link\" >Możesz się zalogować</Link>\r\n        </div>\r\n    )\r\n}\r\nexport default NextReg","import React from '../../node_modules/react';\r\nimport './css/Register.css'\r\nimport Register from \"../components/Reg\"\r\nimport NextReg from \"../components/NextReg\"\r\nimport Nav from \"../layouts/Nav\"\r\nconst RegisterPage = (props) => {\r\n    const location = \"reg\"\r\n    return (\r\n        <>\r\n            <Nav where={location}></Nav>\r\n            {!props.isRegistrationDone ? <Register props={props} /> : <NextReg />}\r\n        </>\r\n    )\r\n}\r\nexport default RegisterPage","import './css/Welcome.css';\r\nimport React, { Component } from '../../node_modules/react';\r\nimport Nav from '../layouts/Nav'\r\nimport Welcome from '../layouts/Welcome'\r\nimport LoginPage from './LoginPage'\r\nimport RegisterPage from './RegisterPage'\r\nimport { BrowserRouter as Router, Switch, Route } from '../../node_modules/react-router-dom'\r\n\r\nclass HomePage extends Component {\r\n    state = {}\r\n    render() {\r\n        const { regValues, isRegistrationDone, loginStatus } = this.props\r\n        return (\r\n            <Router>\r\n                <>\r\n                    <Nav isMain={true} />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Welcome} />\r\n                        <Route path=\"/login\" render={(props) => <LoginPage {...props} regValues={regValues} handler={this.props.onChange} onSub={this.props.onSub} isRegistrationDone={isRegistrationDone} loginStatus={loginStatus} />} />\r\n                        <Route path=\"/register\" render={(props) => <RegisterPage {...props} regValues={regValues} handler={this.props.onChange} onSub={this.props.onSub} isRegistrationDone={isRegistrationDone} />} />\r\n                    </Switch>\r\n                </>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nconst ListNavItem = (props) => {\r\n\r\n    return (\r\n        <NavLink to={'list'} id={props.id} name={props.name} onClick={props.handler} className=\"list-item\">\r\n            <div className=\"list-item\">\r\n                <i className=\"fas fa-list\"></i>\r\n                <p className=\"list-name\">{props.name}</p>\r\n                <button data-listid={props.id} className=\"btn-rec btn-rec-small\" id=\"delete-list\" onClick={props.deleteList}>-</button>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default ListNavItem;","import './css/Nav.css'\r\nimport './css/NavMain.css'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport ListNavItem from \"../components/ListNavItem;\"\r\nconst NavMain = (props) => {\r\n    const { lists, userName, addListHandler, handler, deleteList, avatar } = props\r\n    const ReactLists = lists.map(list => <ListNavItem key={list._id ? list._id : list.temp_id} name={list.tittle} id={list._id ? list._id : list.temp_id} handler={handler} deleteList={deleteList} />)\r\n\r\n    return (\r\n        <nav className=\" nav nav2\">\r\n            <div className=\"nav-user\"><img src={avatar} alt=\"\" className=\"avatar-thumbnail\" /> <NavLink to=\"/user\">{userName}</NavLink></div>\r\n            {ReactLists}\r\n            <button onClick={addListHandler} className=\"btn-rec\" id=\"add-list\">+</button>\r\n\r\n        </nav>\r\n    )\r\n}\r\nexport default NavMain","import React from 'react'\r\nconst ListData = (props) => {\r\n    const { activeList, handler, activeListInputs, isListEddited } = props\r\n\r\n    return (\r\n        <div className=\"listHead\" data-listid={activeList[0]._id}>\r\n            <textarea placeholder=\"Nazwa\" value={activeListInputs.tittle} data-listid={activeList[0]._id} onChange={handler} name=\"list-tittle\" type=\"text\" className=\"list-input\" />\r\n            <textarea placeholder=\"Opis\" className=\"list-input\" value={activeListInputs.description} data-listid={activeList[0]._id} onChange={handler} name=\"list-description\" type=\"text\" />\r\n            {isListEddited ? <button data-listid={activeList[0]._id} onClick={handler} className=\"save-btn save-btn-list\" >Zapisz zmiany</button> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListData;","import React from 'react';\r\nimport './components Css/TaskFull.css'\r\nconst TaskFull = (props) => {\r\n    const { _id, stage } = props.task.task\r\n    const { handler, activeTaskInputs } = props\r\n    const { name, description } = activeTaskInputs\r\n\r\n    return (\r\n        <div className=\"taskFull-wrapp\" id={_id} data-type=\"taskFull\" data-stage={stage}>\r\n            <div className=\"task-close\" onClick={handler} data-name=\"close\"><i className=\"fas fa-times\"></i></div>\r\n            <input onChange={handler} className=\"input-disp task-imput task-input-name\" name='name' type=\"text\" placeholder={name} value={name} />\r\n            <textarea onChange={handler} className=\"input-disp task-imput task-input-desc\" name='description' value={description} placeholder={description} type=\"text\" />\r\n            <div className=\"taskFull-buttons\" onClick={handler} >\r\n                <button data-type=\"save\">Zapisz</button>\r\n                <button data-type=\"delete\">Usuń</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskFull;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n    const { task, stageHandler, fullTaskHandler, listName, listId } = props\r\n\r\n\r\n    return (\r\n        <div className=\"task\" data-listtittle={listName} data-listid={listId} data-stage={task.stage} data-type=\"taskSmall\" id={task._id} onClick={fullTaskHandler} >\r\n            <h1 className=\"task-tittle\">{task.name}</h1>\r\n            {task.stage !== 3 ? <button data-type=\"move\" onClick={stageHandler} className=\"task-btn done-btn\"><i data-type=\"move\" className=\"fas fa-arrow-right\"></i></button> : null}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Task;","import React from 'react'\r\n\r\nimport TaskFull from '../components/TaskFull'\r\nimport Task from './Task'\r\nconst Stage = (props) => {\r\n    const { stage, tasks, activeTask, stageHandler, listName, activeTaskInputs, listId, stageName } = props\r\n    const { handlers } = props\r\n    const stageTasks = tasks ? tasks.filter(task => task.stage === stage) : null\r\n\r\n\r\n    const map = stageTasks ? stageTasks.map(task => <Task key={task._id} listName={listName} listId={listId} task={task} stageHandler={stageHandler} fullTaskHandler={handlers.fullTaskHandler} />) : null\r\n\r\n    return (\r\n        <div className=\"stag1 tasks-box\">\r\n            <h2 className=\"stage-name\">{stageName}</h2>{map}\r\n            {stage === 1 ? <div className=\"tasks-footer\">\r\n                <button id={listId} data-listname={listName} onClick={handlers.addTaskHandler} className=\"add-task-btn btn-rec\">Add</button>\r\n            </div> : null}\r\n            {activeTask && activeTask.task.stage === stage && activeTask.task.list === listId ? <TaskFull handler={handlers.fullTaskHandler} task={activeTask} activeTaskInputs={activeTaskInputs} /> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stage;","import React from 'react'\r\nimport \"./components Css/List.css\"\r\nimport ListData from './ListData'\r\n\r\nimport Stage from '../components/Stage'\r\n\r\nconst ListHooks = props => {\r\n    const { handlers, activeTask, activeList, activeTaskInputs, activeListInputs, isListEddited } = props\r\n\r\n    return (\r\n        <div className=\"app-window-box box-full\" >\r\n            {<ListData activeListInputs={activeListInputs} activeList={activeList} handler={handlers.listInputsHandler} outFocusHandler={handlers.listInputsOutFocus} isListEddited={isListEddited} />}\r\n\r\n            <div className=\"tasks-wrapper\">\r\n                <Stage stageName='Do Zrobienia' activeTaskInputs={activeTaskInputs} stage={1} activeTask={activeTask} handlers={handlers} tasks={activeList[0].tasks} listName={activeList[0].tittle} stageHandler={handlers.stageTaskHandler} listId={activeList[0]._id} />\r\n                <Stage stageName='W trakcie' activeTaskInputs={activeTaskInputs} stage={2} activeTask={activeTask} tasks={activeList[0].tasks} stageHandler={handlers.stageTaskHandler} listName={activeList[0].tittle} handlers={handlers} listId={activeList[0]._id} />\r\n                <Stage stageName='Zrobione' activeTaskInputs={activeTaskInputs} stage={3} activeTask={activeTask} tasks={activeList[0].tasks} stageHandler={handlers.stageTaskHandler} listName={activeList[0].tittle} handlers={handlers} listId={activeList[0]._id} />\r\n            </div>\r\n\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\nexport default ListHooks","import React from \"react\"\r\nimport './components Css/EmptyList.css'\r\nconst EmptyList = (props) => {\r\n\r\n    const { data } = props\r\n    return (\r\n        <div className=\"app-window-box box-empty\">\r\n            <h1 className=\"empty-list-text\">Witaj {data.user.name}</h1>\r\n            {data.lists.length > 0 ? <h1 className=\"empty-list-text\">Zacznij pracę ze swoimi zadaniami</h1> : <h1 className=\"empty-list-text\">Dodaj listę Zadań</h1>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default EmptyList;","\r\nconst uploudFile = async (file) => {\r\n    const formData = new FormData()\r\n    formData.append('avatar', file)\r\n\r\n    const url = \"https://sebastian-webdev-task-app.herokuapp.com/users/me/avatar\"\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken')}`,\r\n        },\r\n        body: formData\r\n    }\r\n    try {\r\n        const res = await fetch(url, options)\r\n        return res\r\n\r\n    } catch (e) {\r\n        throw new Error(e)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst handleDroppedFiles = async (files) => {\r\n    if (files.length === 1) {\r\n        try {\r\n            const res = await uploudFile(files[0])\r\n            return res\r\n\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    } else {\r\n        const filesArr = [...files]\r\n        filesArr.forEach(file => { uploudFile(file) })\r\n    }\r\n\r\n\r\n}\r\nexport default handleDroppedFiles","\r\nconst previevFiles = (data) => {\r\n\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(data[0])\r\n    return reader\r\n}\r\nexport default previevFiles","import React from 'react'\r\nconst prevImg = (props) => {\r\n    const { url } = props\r\n    return (\r\n        <div className='prev-img-container'>\r\n            <img className='prev-img' src={url} alt=\"\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default prevImg;","const checkAvatar = (type = \"\") => {\r\n    const typeArr = type.split('/')\r\n\r\n    if (typeArr.includes('image')) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\nexport default checkAvatar","import React, { useState } from 'react'\r\nimport './components Css/AddAvatar.css'\r\nimport handleDroppedFiles from '../functions/handleDroppedFiles'\r\nimport previevFiles from '../functions/previevFile'\r\nimport PrevImg from './PrevImg'\r\n\r\nimport checkAvatar from '../functions/checkAvatar'\r\nconst AddAvatar = (props) => {\r\n    const { setAvatar, closeAvatar } = props\r\n    const [droppedFile, setDroppedFile] = useState()\r\n    const [isclicked, setIsclicked] = useState(false)\r\n    const [isFile, setIsFile] = useState(false)\r\n    const [prevurl, setPrevUrl] = useState([])\r\n    const [isUploaded, setIsUploaded] = useState(false)\r\n    const [isOnDraggedArea, setIsOnDraggedArea] = useState(false)\r\n    const dragHandler = e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        if (e.type === \"dragenter\") {\r\n            setIsOnDraggedArea(true)\r\n        } else if (e.type === \"dragleave\") {\r\n            setIsOnDraggedArea(false)\r\n\r\n        } else if (e.type === \"dragover\") {\r\n            setIsOnDraggedArea(true)\r\n        } else if (e.type === \"drop\") {\r\n            setIsOnDraggedArea(false)\r\n\r\n            const dt = e.dataTransfer\r\n            const file = dt.files\r\n\r\n\r\n            if (file.length !== 1) {\r\n                alert(\"Możesz wybrać tylkok jedno zdjęcie\")\r\n            } else if (checkAvatar(file[0].type)) {\r\n\r\n                setDroppedFile(file)\r\n                setIsclicked(false)\r\n                const reader = previevFiles(file)\r\n\r\n                reader.onloadend = () => {\r\n                    const src = reader.result\r\n\r\n                    setPrevUrl(src)\r\n                    setIsFile(true)\r\n                }\r\n            } else {\r\n                alert(\"Zły rodzaj pliku!\")\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    const handleInput = e => {\r\n        e.preventDefault()\r\n        setIsclicked(false)\r\n        const file = e.target.files\r\n        setDroppedFile(file)\r\n        const reader = previevFiles(file)\r\n        reader.onloadend = () => {\r\n            const src = reader.result\r\n\r\n            setPrevUrl(src)\r\n            setIsFile(true)\r\n        }\r\n\r\n\r\n    }\r\n    const handleClick = e => {\r\n        handleDroppedFiles(droppedFile).then(res => {\r\n            if (res.status === 200) {\r\n                setIsUploaded(true)\r\n                setIsclicked(true)\r\n                setTimeout(() => {\r\n                    closeAvatar()\r\n                    setAvatar(prevurl)\r\n                }, 1000)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='uploud-avatar-wrapper'>\r\n            <div className={`dragg-area ${isOnDraggedArea ? 'highlight' : null}`} onDragEnter={dragHandler} onDragLeave={dragHandler} onDragOver={dragHandler} onDrop={dragHandler}>\r\n                {isUploaded ? <p className=\"drop-desc\">Zdjęcie zostało wysłane</p> : <> <p className=\"drop-desc\">Przeciągnij tutaj Plik</p>\r\n                    <p className=\"drop-desc\">Albo Wybierz z listy </p><i className=\"fas fa-arrow-down\"></i>\r\n                    <form action=\"\">\r\n                        <label className=\"avatar-input-label btn-rec\" htmlFor=\"avatar-input\">Wybierz avatar</label>\r\n                        <input onChange={handleInput} type=\"file\" id=\"avatar-input\" name=\"avatar\"\r\n                            accept=\"image/png, image/jpeg\" />\r\n                    </form> </>}\r\n\r\n                {isFile ? <div className=\"previev-galery\">\r\n                    <PrevImg url={prevurl} />\r\n                    {!isclicked ? <button onClick={handleClick} className=\"send-avatar-button save-btn\">Wyślij zdjęcie</button> : null}\r\n                </div> : null}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddAvatar;","import React, { useEffect, useState } from 'react'\r\nimport './components Css/User.css'\r\nimport AddAvatar from './addAvatar'\r\nconst User = (props) => {\r\n    const { _id, avatar, } = props.user\r\n    const { handlers, isUserEddited, userInputs } = props\r\n    const { name, email } = userInputs\r\n    const [isAddAvatar, setIsAddAvatar] = useState(false)\r\n    const [isAvatarFocus, setIsAvatarFocus] = useState(false)\r\n\r\n    useEffect(() => {\r\n        return handlers.userResetInputs()\r\n    }, [])\r\n    const btnHandler = e => {\r\n        setIsAddAvatar(true)\r\n    }\r\n    const handleCloseAddAvatar = () => {\r\n        setIsAddAvatar(false)\r\n\r\n    }\r\n    const mouseHandler = e => {\r\n\r\n        if (e.type === \"mouseenter\") {\r\n            setIsAvatarFocus(true)\r\n        } else {\r\n            setIsAvatarFocus(false)\r\n        }\r\n\r\n    }\r\n    const visible = {\r\n        visibility: 'visible'\r\n    }\r\n    const hidden = {\r\n        visibility: 'hidden'\r\n    }\r\n    return (\r\n        <div className=\"user-wrapper\" data-userid={_id}>\r\n            {isAddAvatar ? <AddAvatar closeAvatar={handleCloseAddAvatar} setAvatar={handlers.setNewAvatarToLocaState} userId={_id} /> : <div onMouseLeave={mouseHandler} onMouseEnter={mouseHandler} className=\"avatar-wrapper\">{avatar ? <img className=\"user-avatar-img\" src={avatar} alt=\"user avatar\" /> : <i className=\"fas fa-user no-img-avatar\"></i>}\r\n                <div style={isAvatarFocus ? visible : hidden} className=\"avatar-settings\">\r\n                    <button onClick={btnHandler} className=\"avatar-settings-btn btn-rec\">Zmień avatar</button>\r\n                </div>\r\n            </div>}\r\n\r\n            <label className=\"userLabels\" htmlFor='userName'>Nazwa</label>\r\n            <input data-type=\"name\" onChange={handlers.userInputsHandler} id=\"userName\" value={name} className=\"input-disp input-user input-user_name\" type=\"text\" />\r\n            <label className=\"userLabels\" htmlFor='userEmail'>E-mail</label>\r\n            <h1 className=\"input-disp input-user input-user_email\">{email}</h1>\r\n\r\n\r\n\r\n\r\n            {isUserEddited ? <button onClick={handlers.userSaveHandler} className=\"user-button-save save-btn\"> Zapisz zmiany</button> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react'\r\nimport './components Css/LogOut.css'\r\nconst LogOut = (props) => {\r\n    return (\r\n        <div onClick={props.logOutHandler} className=\"logOut-wrap\">\r\n            <p className=\"log-out-text\">Logout</p>\r\n            <i className=\"fas fa-sign-out-alt log-out-ico\"></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogOut;","import React, { Component } from 'react';\r\nimport './css/Main..css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport NavMain from \"../layouts/NavMain\"\r\nimport ListHooks from '../components/ListHooks'\r\nimport EmptyList from '../components/EmptyList'\r\nimport User from '../components/User'\r\nimport LogOut from '../components/LogOut'\r\nclass Main extends Component {\r\n    state = {\r\n        isLoaded: false,\r\n    }\r\n    user = { ...this.props.data.user }\r\n\r\n    render() {\r\n        const { isReady, data, activeTask, activeTaskInputs, handlers, activeListInputs, activeListName, activeList, activeListId, isUserEddited, userInputs, token, isListEddited } = this.props\r\n\r\n\r\n        return (\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                {isReady ?\r\n                    <div className=\"main-wraper\">\r\n                        <NavMain lists={data.lists} avatar={data.user.avatar} userName={data.user.name} handler={handlers.setActiveList} addListHandler={handlers.addListHandler} deleteList={handlers.deleteList} />\r\n                        <Switch>\r\n                            <Route path=\"/list\" render={(props) => (activeListId ? <ListHooks {...props} activeListInputs={activeListInputs} handlers={handlers} activeListName={activeListName} lists={data.lists} activeTask={activeTask} activeList={activeList} activeTaskInputs={activeTaskInputs} isListEddited={isListEddited} /> : <EmptyList data={data} />)} />\r\n                            <Route path='/user' render={(props) => <User {...props} user={data.user} handlers={handlers} userInputs={userInputs} isUserEddited={isUserEddited} token={token} />} />\r\n                            <Route path=\"/\" render={(props) => (\r\n                                <EmptyList {...props} data={data} />\r\n                            )} />\r\n\r\n                        </Switch>\r\n                        <LogOut logOutHandler={handlers.logOutHandler} />\r\n                    </div> : null}\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport './components Css/Loading.css'\r\nconst Loading = (props) => {\r\n    return (\r\n        <div className=\"loading-wrap\">\r\n            <h1>Loading</h1>\r\n            <div className=\"dot\"></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","const validateId = (id) => {\r\n    const idArr = id.split(\"\")\r\n    const valid = \"qwertyuioplkjhgfdsazxcvbnm\".split(\"\")\r\n    // console.log(valid, \"valid chars\");\r\n    //console.log(idArr, \"input id\");\r\n\r\n    let check = true\r\n    const maxI = idArr.length\r\n    let n = 0;\r\n    while (check && n < maxI) {\r\n        const inc = valid.includes(idArr[n])\r\n        n++\r\n        if (inc) {\r\n            check = false\r\n        }\r\n    }\r\n    return check\r\n\r\n\r\n\r\n\r\n}\r\nexport default validateId","import React, { Component } from '../../node_modules/react';\r\nimport './components Css/App.css';\r\nimport { customFetch } from '../functions/fetch'\r\nimport { getTasks } from '../functions/getTasks'\r\nimport { getLists } from '../functions/getLists'\r\nimport Footer from '../layouts/Footer'\r\nimport { transformData } from '../functions/transformData'\r\nimport createTask from '../functions/createTask'\r\nimport findListAndTask from '../functions/findListAndTask'\r\nimport copyData from '../functions/copyData'\r\nimport createList from '../functions/createList'\r\nimport updateDB from '../functions/updateDB'\r\nimport { updateTask } from '../functions/updateTask'\r\nimport HomePage from '../pages/WelcomePage'\r\nimport Main from '../pages/Main'\r\nimport Loading from './Loading'\r\nimport validateId from '../functions/typeof_id'\r\nclass App extends Component {\r\n  state = {\r\n    regValue: {\r\n      name: \"\",\r\n      email: \"\",\r\n      pass: \"\",\r\n    },\r\n    rememberMe: false,\r\n    isRegistrationDone: false,\r\n    isLogin: false,\r\n    isReady: false,\r\n    isload: false,\r\n    loginStatus: '',\r\n    data: {},\r\n    activeTask: {\r\n      task: {}\r\n    },\r\n    activeTaskInputs: {\r\n      name: '',\r\n      description: ''\r\n    },\r\n    activeListInputs: {\r\n      tittle: '',\r\n      description: ''\r\n    },\r\n    userInputs: {\r\n      name: \"\",\r\n      email: \"\"\r\n    },\r\n    isUserEddited: false,\r\n    isListEddited: false\r\n  };\r\n\r\n  onSub = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const { name, email, pass, } = this.state.regValue\r\n    const { rememberMe } = this.state\r\n\r\n    if (e.target.id === 'reg') {\r\n      const body = {\r\n        name,\r\n        email,\r\n        password: pass\r\n      }\r\n      const options = {\r\n        method: 'post',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body)\r\n      }\r\n      const url = \"https://sebastian-webdev-task-app.herokuapp.com/users\";\r\n      try {\r\n        await customFetch(url, options)\r\n\r\n        this.setState({\r\n          isRegistrationDone: true\r\n        })\r\n\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n\r\n      }\r\n    } else if (e.target.id === \"login\") {\r\n      const body = {\r\n        email,\r\n        password: pass\r\n      }\r\n      const url = \"https://sebastian-webdev-task-app.herokuapp.com/users/login\";\r\n      const options = {\r\n        method: 'post',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body)\r\n      }\r\n      try {\r\n        const loginRes = await customFetch(url, options)\r\n        if (!rememberMe) {\r\n          sessionStorage.setItem('accessToken', loginRes.token)\r\n\r\n        } else {\r\n          localStorage.setItem('accessToken', loginRes.token)\r\n        }\r\n        const user = loginRes.user\r\n\r\n\r\n        sessionStorage.setItem('user', JSON.stringify(user))\r\n\r\n        this.setState({\r\n          isLogin: true,\r\n          loginStatus: '200'\r\n        })\r\n        this.manageData(\"onSub\", user)\r\n        window.history.pushState({}, 'main', '/')\r\n\r\n      } catch (e) {\r\n\r\n        if (e.message === '400') {\r\n\r\n          this.setState({ loginStatus: '400' })\r\n\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const value = e.target.value\r\n    switch (e.target.id) {\r\n      case \"reg-name\":\r\n        this.setState(prev => ({\r\n          regValue: {\r\n            name: value,\r\n            email: prev.regValue.email,\r\n            pass: prev.regValue.pass\r\n          },\r\n\r\n        }))\r\n\r\n        break;\r\n      case \"reg-mail\":\r\n        this.setState(prev => ({\r\n          regValue: {\r\n            name: prev.regValue.name,\r\n            email: value,\r\n            pass: prev.regValue.pass\r\n          },\r\n          loginStatus: \"\"\r\n        }))\r\n\r\n        break;\r\n      case \"reg-pass\":\r\n        this.setState(prev => ({\r\n          regValue: {\r\n            name: prev.regValue.name,\r\n            email: prev.regValue.email,\r\n            pass: value\r\n          },\r\n          loginStatus: \"\"\r\n        }))\r\n\r\n        break;\r\n      case \"rememberMe\":\r\n        this.setState(prev => ({\r\n          rememberMe: !prev.rememberMe\r\n        }))\r\n        break;\r\n      default:\r\n\r\n    }\r\n\r\n  }\r\n  componentWillMount() {\r\n    /*window.addEventListener('beforeunload', (e) => {\r\n      window.history.pushState({}, 'main', '/')\r\n      e.returnValue = '';\r\n    })*/\r\n\r\n    const token = localStorage.getItem('accessToken')\r\n    const user = sessionStorage.getItem('user')\r\n    if (user) {\r\n      this.setState({\r\n        isLogin: true,\r\n        user: JSON.parse(user)\r\n      })\r\n      this.manageData(\"mount\", user).then(res => {\r\n        this.setState({\r\n          userInputs: {\r\n            name: res.user.name,\r\n            email: res.user.email\r\n          },\r\n          isload: true\r\n        })\r\n      })\r\n    } else if (token) {\r\n      const url = \"https://sebastian-webdev-task-app.herokuapp.com/users/me\";\r\n      fetch(url, {\r\n        method: 'get',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': 'Bearer ' + token\r\n        },\r\n      }).then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(res.status)\r\n        }\r\n        return res.json()\r\n      }\r\n      ).then(res => {\r\n        sessionStorage.setItem('user', JSON.stringify(res))\r\n        this.setState({\r\n          isLogin: true,\r\n          user: res\r\n        })\r\n        const user2 = sessionStorage.getItem('user')\r\n        this.manageData(\"mount\", user2).then(res => {\r\n\r\n          this.setState({\r\n            userInputs: {\r\n              name: res.user.name,\r\n              email: res.user.email\r\n            },\r\n            isload: true\r\n          })\r\n        })\r\n\r\n      }).catch(e => {\r\n        console.log(e);\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isload: true\r\n      })\r\n    }\r\n\r\n  }\r\n  setNewAvatarToLocaState = (avatar) => {\r\n    const data = { ...this.state.data }\r\n    data.user.avatar = avatar\r\n    this.setState({\r\n      data\r\n    })\r\n\r\n  }\r\n  manageData = async (where, user = this.state.user) => {\r\n    const token = sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken\r\n    let userObj = user\r\n    try {\r\n\r\n      if (typeof user === 'string') {\r\n        userObj = JSON.parse(user)\r\n      }\r\n\r\n\r\n      const userAvatar = `data:image/jpg;base64,${userObj.avatar}`\r\n      userObj.avatar = userAvatar\r\n      const tasks = await getTasks(token)\r\n      const lists = await getLists(token)\r\n      const data = transformData(tasks, lists)\r\n      data.user = userObj\r\n      this.setState({\r\n        isReady: true,\r\n        data\r\n      })\r\n\r\n      return data\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n\r\n  }\r\n  stageTaskHandler = (e) => {\r\n\r\n    const _id = e.currentTarget.parentNode.id\r\n    const listId = e.currentTarget.parentNode.dataset.listid\r\n\r\n    const listIndex = this.state.data.lists.findIndex(list => list._id === listId)\r\n\r\n    const taskIndex = this.state.data.lists[listIndex].tasks.findIndex(task => task._id === _id)\r\n\r\n    const data = { ...this.state.data }\r\n    const modTask = data.lists[listIndex].tasks[taskIndex]\r\n    if (modTask.stage === 1 || modTask.stage === 2) {\r\n      data.lists[listIndex].tasks[taskIndex].stage += 1\r\n    }\r\n    this.setState({ data })\r\n    const body = {\r\n      stage: data.lists[listIndex].tasks[taskIndex].stage\r\n    }\r\n    const url = 'https://sebastian-webdev-task-app.herokuapp.com/tasks/'\r\n    updateTask(url, _id, body).then(res => { /*console.log(res) */ }\r\n    )\r\n\r\n  }\r\n  addTaskHandler = (e) => {\r\n    const data = { ...this.state.data }\r\n\r\n    const listId = e.target.id\r\n    // const listId = data.lists.filter(list => list.tittle === listTittle)[0]._id\r\n\r\n    const listIndex = data.lists.findIndex(list => list._id === listId)\r\n    const owner = this.state.data.user._id\r\n\r\n    const newTask = createTask(listId, owner)\r\n    data.lists[listIndex].tasks.push(newTask)\r\n    this.setState({ data })\r\n    const url = `https://sebastian-webdev-task-app.herokuapp.com/tasks`\r\n    const body = {\r\n      name: newTask.name,\r\n      description: newTask.description,\r\n      list_id: newTask.list,\r\n      temp_Id: newTask.temp_Id\r\n    }\r\n    customFetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken}`\r\n      },\r\n      body: JSON.stringify(body)\r\n    }).then(res => {\r\n\r\n      const data = { ...this.state.data }\r\n      const taskIndex = data.lists[listIndex].tasks.findIndex(t => t.temp_Id === res.temp_Id)\r\n\r\n      data.lists[listIndex].tasks[taskIndex]._id = res._id\r\n      data.lists[listIndex].tasks[taskIndex].createdAt = res.createdAt\r\n      data.lists[listIndex].tasks[taskIndex].updatedAt = res.updatedAt\r\n\r\n      this.setState({\r\n        data\r\n      })\r\n\r\n\r\n    })\r\n\r\n  }\r\n  addListHandler = (e) => {\r\n    const newData = copyData(this.state.data)\r\n    const owner = this.state.data.user._id\r\n    const newList = createList(owner)\r\n    newData.lists.push(newList)\r\n    this.setState({ data: newData })\r\n    const url = `https://sebastian-webdev-task-app.herokuapp.com/lists`\r\n    const body = {\r\n      tittle: newList.tittle,\r\n      description: newList.description,\r\n      temp_id: newList.temp_id\r\n    }\r\n    customFetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken}`\r\n      },\r\n      body: JSON.stringify(body)\r\n    }).then(res => {\r\n      const data = { ...this.state.data }\r\n      const listIndex = data.lists.findIndex(list => list.temp_id === res.temp_id)\r\n      data.lists[listIndex]._id = res._id\r\n      data.lists[listIndex].createdAt = res.createdAt\r\n      data.lists[listIndex].updatedAt = res.updatedAt\r\n      this.setState({ data })\r\n    })\r\n\r\n  }\r\n  fullTaskHandler = (e) => {\r\n    const data = { ...this.state.data }\r\n    e.persist()\r\n    if (e.currentTarget.dataset.type === \"taskSmall\" && e.target.dataset.type !== \"move\") {\r\n\r\n      const listId = e.currentTarget.dataset.listid\r\n      const taskId = e.currentTarget.id\r\n      const work = findListAndTask(listId, taskId, data)\r\n      this.setState({\r\n        activeTask: work,\r\n        activeTaskInputs: {\r\n          name: work.task.name,\r\n          description: work.task.description\r\n        }\r\n      })\r\n\r\n    } else {\r\n      const data = { ...this.state.data }\r\n      const task = { ...this.state.activeTask }\r\n      if (e.target.name === 'name') {\r\n        this.setState(prev => ({\r\n          activeTaskInputs: {\r\n            name: e.target.value,\r\n            description: prev.activeTaskInputs.description\r\n          }\r\n        }))\r\n      } else if (e.target.name === 'description') {\r\n\r\n        this.setState(prev => ({\r\n          activeTaskInputs: {\r\n            name: prev.activeTaskInputs.name,\r\n            description: e.target.value\r\n          }\r\n        }))\r\n      }\r\n      if (e.target.dataset.type === 'save') {\r\n        const newValues = { ...this.state.activeTaskInputs }\r\n        if (!newValues.name) {\r\n          alert(\"Task musi mieć jakąś nazwę\")\r\n        } else {\r\n          task.task.name = newValues.name\r\n          task.task.description = newValues.description\r\n          this.setState({ activeTask: { task: {} } })\r\n\r\n          const body = {\r\n            name: newValues.name,\r\n            description: newValues.description\r\n          }\r\n          const id = task.task._id\r\n          const url = 'https://sebastian-webdev-task-app.herokuapp.com/tasks/'\r\n          updateTask(url, id, body).then(res => { /*console.log(res)*/ })\r\n        }\r\n      } else if (e.currentTarget.dataset.name === \"close\") {\r\n        this.setState({ activeTask: { task: {} } })\r\n      } else if (e.target.dataset.type === \"delete\") {\r\n        const confirm = window.confirm('Zadanie zostanie usuniętę, czy napewno chcesz?')\r\n        if (confirm) {\r\n          const listIndex = task.listIndex\r\n          const taskIndex = task.taskIndex\r\n          const id = data.lists[listIndex].tasks[taskIndex]._id\r\n          const url = `https://sebastian-webdev-task-app.herokuapp.com/tasks/${id}`\r\n          const options = {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Accept': 'application/json, text/plain, */*',\r\n              \"Content-Type\": \"application/json\",\r\n              'Authorization': `Bearer ${sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken}`\r\n            }\r\n          }\r\n          customFetch(url, options).then(res => {\r\n\r\n          })\r\n          data.lists[listIndex].tasks.splice(taskIndex, 1)\r\n          this.setState({ data: data, activeTask: { task: {} } })\r\n\r\n\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n  listInputsHandler = (e) => {\r\n    const newData = copyData(this.state.data)\r\n    const ListId = e.target.dataset.listid\r\n    const listIndex = newData.lists.findIndex(list => list._id === ListId)\r\n    const value = e.target.value\r\n    const newActiveList = copyData(this.state.activeList)\r\n    this.setState({ isListEddited: true })\r\n    if (e.type === \"change\") {\r\n\r\n      if (e.target.name === \"list-tittle\") {\r\n        this.setState(prev => ({\r\n          activeListInputs: {\r\n            tittle: value,\r\n            description: prev.activeListInputs.description\r\n          }\r\n        }))\r\n\r\n\r\n      } else {\r\n\r\n        this.setState(prev => ({\r\n          activeListInputs: {\r\n            tittle: prev.activeListInputs.tittle,\r\n            description: value\r\n          }\r\n\r\n        }))\r\n      }\r\n    } else if (e.type === \"click\") {\r\n      const newTittle = this.state.activeListInputs.tittle\r\n      const newDesc = this.state.activeListInputs.description\r\n      newActiveList[0].tittle = newTittle\r\n      newData.lists[listIndex].tittle = newTittle\r\n      newData.lists[listIndex].description = newDesc\r\n\r\n      if (!newTittle) {\r\n        alert(\"Nazwa jest wymagana\")\r\n      } else {\r\n        this.setState({\r\n          activeList: newActiveList,\r\n          activeListName: newTittle,\r\n          data: newData,\r\n          isListEddited: false\r\n\r\n        })\r\n\r\n        const url = `https://sebastian-webdev-task-app.herokuapp.com/lists/${ListId}`\r\n        const body = {\r\n          tittle: newTittle,\r\n          description: newDesc\r\n        }\r\n        updateDB(url, body)\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  setActiveList = e => {\r\n\r\n    if (e.target.id !== 'delete-list') {\r\n      // e.preventDefault()\r\n      const activeListName = e.currentTarget.name;\r\n      const activeListId = e.currentTarget.id\r\n\r\n\r\n      let activeList = []\r\n      if (validateId(activeListId)) {\r\n        activeList = this.state.data.lists.filter(list => list.temp_id === activeListId * 1)\r\n      } else {\r\n        activeList = this.state.data.lists.filter(list => list._id === activeListId)\r\n      }\r\n\r\n      const inputs = {\r\n        tittle: activeListName,\r\n        description: activeList[0].description\r\n      }\r\n      this.setState({\r\n        activeListName,\r\n        activeList,\r\n        activeListId,\r\n        activeListInputs: inputs\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n  userInputsHandler = e => {\r\n    const type = e.target.dataset.type\r\n    const value = e.target.value\r\n    if (type === \"name\") {\r\n      this.setState(prev => ({\r\n        userInputs: {\r\n          name: value,\r\n          email: prev.userInputs.email\r\n        },\r\n        isUserEddited: true\r\n      }))\r\n    } else {\r\n      this.setState(prev => ({\r\n        userInputs: {\r\n          name: prev.userInputs.name,\r\n          email: value\r\n        },\r\n        isUserEddited: true\r\n      }))\r\n    }\r\n  }\r\n  userSaveHandler = e => {\r\n    const newName = this.state.userInputs.name\r\n    const newData = copyData(this.state.data)\r\n    newData.user.name = newName\r\n    this.setState({\r\n      data: newData\r\n    })\r\n    this.userResetInputs(newData)\r\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken')\r\n    const url = \"https://sebastian-webdev-task-app.herokuapp.com/users/update\"\r\n    const body = { name: newName }\r\n    const options = {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(body)\r\n    }\r\n    customFetch(url, options).then(res => {\r\n      // console.log(res);\r\n\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n\r\n  }\r\n  userResetInputs = (data) => {\r\n    if (data) {\r\n      this.setState({\r\n        userInputs: {\r\n          name: data.user.name,\r\n          email: data.user.email\r\n        },\r\n        isUserEddited: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        userInputs: {\r\n          name: this.state.data.user.name,\r\n          email: this.state.data.user.email\r\n        },\r\n        isUserEddited: false\r\n      })\r\n    }\r\n\r\n  }\r\n  deleteList = e => {\r\n    e.preventDefault()\r\n    const id = e.target.dataset.listid\r\n    const url = `https://sebastian-webdev-task-app.herokuapp.com/lists/${id}`\r\n    const options = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken}`\r\n      }\r\n    }\r\n\r\n    if (window.confirm(\"Czy na pewno chcesz usunąć listę?\")) {\r\n      const data = { ...this.state.data }\r\n      const listIndex = data.lists.findIndex(list => list._id === id)\r\n      data.lists.splice(listIndex, 1)\r\n      this.setState({ data })\r\n      customFetch(url, options).then(res => {\r\n        //console.log(res);\r\n      })\r\n\r\n    } else {\r\n\r\n\r\n    }\r\n\r\n  }\r\n  logOutHandler = e => {\r\n    const url = `https://sebastian-webdev-task-app.herokuapp.com/users/logout`\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${sessionStorage.accessToken ? sessionStorage.accessToken : localStorage.accessToken}`\r\n      }\r\n    }\r\n    fetch(url, options).then(res => {\r\n\r\n      window.history.pushState({}, 'main', '/')\r\n      this.setState({\r\n        isLogin: false,\r\n        isReady: false,\r\n        activeList: [],\r\n        activeListId: '',\r\n        activeListName: '',\r\n        data: {},\r\n        loginStatus: \"\"\r\n      })\r\n      sessionStorage.clear()\r\n      localStorage.clear()\r\n\r\n    }).catch(e => {\r\n      console.log(e);\r\n    })\r\n\r\n  }\r\n  handlers = {\r\n    stageTaskHandler: this.stageTaskHandler,\r\n    addTaskHandler: this.addTaskHandler,\r\n    fullTaskHandler: this.fullTaskHandler,\r\n    addListHandler: this.addListHandler,\r\n    listInputsHandler: this.listInputsHandler,\r\n    setActiveList: this.setActiveList,\r\n    userInputsHandler: this.userInputsHandler,\r\n    userSaveHandler: this.userSaveHandler,\r\n    userResetInputs: this.userResetInputs,\r\n    setNewAvatarToLocaState: this.setNewAvatarToLocaState,\r\n    deleteList: this.deleteList,\r\n    logOutHandler: this.logOutHandler\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    const { isRegistrationDone, isReady, data, activeTask, activeTaskInputs, activeListInputs, activeListName, activeList, activeListId, isUserEddited, userInputs, isListEddited, loginStatus, isload } = this.state\r\n    const regValues = this.state.regValue\r\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken')\r\n\r\n\r\n    if (isload) {\r\n      return (\r\n        <div className=\"app-wrapper\">\r\n          {this.state.isReady ? <Main token={token} activeListId={activeListId} activeList={activeList} activeListName={activeListName} activeListInputs={activeListInputs} activeTask={activeTask} handlers={this.handlers} isReady={isReady} data={data} activeTaskInputs={activeTaskInputs} userInputs={userInputs} isUserEddited={isUserEddited} isListEddited={isListEddited} /> : <HomePage regValues={regValues} isRegistrationDone={isRegistrationDone} onChange={this.onChange} onSub={this.onSub}\r\n            loginStatus={loginStatus} />}\r\n          <Footer />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <Loading />\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n//import Worker from 'worker-loader!./Worker.js';\r\n\r\n\r\n//const dataWorker = new SharedWorker('./web-workers/dataManagWorker.js');\r\n\r\nwindow.addEventListener('drop', (e) => {\r\n    e.preventDefault()\r\n})\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}